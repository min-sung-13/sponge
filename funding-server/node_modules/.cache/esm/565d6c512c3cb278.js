let jwt,User;_2c3‍.x([["default",()=>_2c3‍.o]]);_2c3‍.w("jsonwebtoken",[["default",["jwt"],function(v){jwt=v}]]);_2c3‍.w("../models/user",[["default",["User"],function(v){User=v}]]);


const jwtMiddleware = async (ctx, next) =>{
    const token = ctx.cookies.get('access_token');
    if(!token) return next();
    try{
        const decoded = jwt.verify(token, process.env.JWT_SECRET);
        ctx.state.user = {
            u_id: decoded.u_id,
            username: decoded.username,
            u_profile: decoded.u_profile
        };
        const now = Math.floor(Date.now() / 1000);
        if(decoded.exp - now < 60 * 60 * 24 * 3.5){
            const user = await User.findById(decoded._id);
            const token = user.generateToken();
            ctx.cookies.set('access_token', token, {
                maxAge: 1000 * 60 * 60 * 24 * 7,
                httpOnly: true
            });
        }
        _2c3‍.g.console.log(decoded);
        return next();
    }catch(e){
        return next();
    }
};

_2c3‍.d(jwtMiddleware);